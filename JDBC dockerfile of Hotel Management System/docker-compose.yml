services:
  javasql:
    image: mysql
    container_name: javasql
    ports:
      - "3300:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 12345678
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:            
      - ./script.sql:/docker-entrypoint-initdb.d/init.sql
      - mysql-data:/var/lib/mysql

  java_app:
    build: . 
    image: hotel-management-java-app
    ports:
      - "8080:8080"
    environment:
      # Configuration for your Java app to connect to the DB
      DB_HOTELMANAGEMENT_URL: jdbc:mysql://javasql:3306/hotel_db?allowPublicKeyRetrieval=true&useSSL=false
      DB_USER: root
      DB_PASSWORD: 12345678
    # IMPORTANT: Wait for the database service (javasql) to be ready before starting the app
    depends_on:
      javasql:
        # Without this 'condition', your Java app might start before the DB is ready, causing connection errors.
        condition: service_healthy

volumes:
  # This declares the named volume 'mysql-data' so the javasql service can use it. In this the data will persist even if the container is removed or recreated as
  # the data is stored in the volume outside the container's lifecycle i.e. the volumes are independent of the container's lifecycle.
  mysql-data: